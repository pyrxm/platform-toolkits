---

name: Container Image Build and Push - CI Workflow

'on':
  workflow_run:
    workflows: ["Scheduled scan of container images for vulnerabilities"]
    types:
      - completed
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  scan:
    name: trivy scan
    runs-on: ubuntu-latest
    if: github.ref_name != 'main'
    strategy:
      fail-fast: false
      matrix:
        target:
          - data
          - network
          - proxy
          # - platform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build container image
        run: |
          docker build \
            --target "${{ matrix.target }}_toolkit" \
            -t localhost/${{ github.repository_owner }}/ptk-${{ matrix.target }}-toolkit:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: localhost/${{ github.repository_owner }}/ptk-${{ matrix.target }}-toolkit:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'

  build-and-push-image:
    name: build and push multi-arch container image
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/main' || github.event.workflow_run.conclusion == 'failure'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        target:
          - data
          - network
          - proxy
          - platform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image
        uses: docker/build-push-action@v5
        id: push
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          target: "${{ matrix.target }}_toolkit"
          tags: ghcr.io/${{ github.repository_owner }}/ptk-${{ matrix.target }}-toolkit:${{ github.sha }},ghcr.io/${{ github.repository_owner }}/ptk-${{ matrix.target }}-toolkit:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/ptk-${{ matrix.target }}-toolkit
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  helm_push:
    name: push helm chart
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Push Helm chart to GitHub Registry
        uses: bsord/helm-push@v4.1.0
        with:
          useOCIRegistry: true
          registry-url:  oci://ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          access-token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          chart-folder: helm
